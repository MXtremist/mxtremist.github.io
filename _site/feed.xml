<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-29T13:45:06+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">MXtremist</title><subtitle>人生天地间，忽如远行客。</subtitle><entry><title type="html">计网复习笔记整理</title><link href="http://localhost:4000/cnnote/" rel="alternate" type="text/html" title="计网复习笔记整理" /><published>2020-07-27T00:00:00+08:00</published><updated>2020-07-27T00:00:00+08:00</updated><id>http://localhost:4000/cnnote</id><content type="html" xml:base="http://localhost:4000/cnnote/">&lt;p&gt;按复习顺序（目前的顺序是：绪论→链路层→网络层→传输层→网络安全→多媒体和部分应用层）整理计网复习知识点。🐛🐛🐛&lt;/p&gt;

&lt;h2 id=&quot;绪论&quot;&gt;绪论&lt;/h2&gt;

&lt;h3 id=&quot;什么是因特网&quot;&gt;什么是因特网&lt;/h3&gt;

&lt;p&gt;“网络的网络”&lt;/p&gt;

&lt;p&gt;从多维度分析：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;维度&lt;/th&gt;
      &lt;th&gt;解释&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;设备&lt;/td&gt;
      &lt;td&gt;端设备、通信链路、路由器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;服务&lt;/td&gt;
      &lt;td&gt;分布式应用程序&amp;amp;套接字接口&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;协议&lt;/td&gt;
      &lt;td&gt;TCP/IP…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;连接到因特网然后传输&quot;&gt;连接到因特网，然后传输&lt;/h3&gt;

&lt;p&gt;端系统-边缘路由器-核心路由器-边缘路由器-端系统&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;举例&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;网络边缘&lt;/td&gt;
      &lt;td&gt;端系统（主机）：client, server, data center…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;网络接入&lt;/td&gt;
      &lt;td&gt;电缆、光纤、卫星…&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;网络核心&lt;/td&gt;
      &lt;td&gt;分组交换机&amp;amp;路由器构成的网络&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;传输方式：电路交换（独占，e.g.专用电话线）；分组交换（分块传输，核心路由器负责调度）；虚电路（分组交换方式实现电路交换，固定的路由为其预留带宽）&lt;/p&gt;

&lt;h3 id=&quot;协议体系结构&quot;&gt;协议体系结构&lt;/h3&gt;

&lt;p&gt;分层的&lt;/p&gt;

&lt;p&gt;OSI:物理、数据链路、网络、传输、会话、表示、应用，后三层在TCP/IP中均在应用层实现&lt;/p&gt;

&lt;h3 id=&quot;网络性能评估&quot;&gt;网络性能评估&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;时延类型&lt;/th&gt;
      &lt;th&gt;产生方式&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;传输时延&lt;/td&gt;
      &lt;td&gt;将分组发送出去所需要的时间，Length / Rate&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;传播时延&lt;/td&gt;
      &lt;td&gt;分组在网络中传播所需要的时间，RTT = 2 * propagation delay&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;排队时延&lt;/td&gt;
      &lt;td&gt;分组在缓冲区等待&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;处理时延&lt;/td&gt;
      &lt;td&gt;检错、查看首部并导向正确位置&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;顺序：&lt;em&gt;4-3-1-2&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;丢包原因&lt;/strong&gt;：缓冲区不足 or 传播中出错&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;吞吐量&lt;/strong&gt;：可用带宽，路径上获得的带宽的最小值&lt;/p&gt;

&lt;h2 id=&quot;链路层&quot;&gt;链路层&lt;/h2&gt;

&lt;h3 id=&quot;核心功能&quot;&gt;核心功能&lt;/h3&gt;

&lt;p&gt;分帧（frame = 头+datagram+尾）、MAC（媒介访问控制，在共享广播信道时协调节点）&lt;/p&gt;

&lt;h3 id=&quot;差错检测&quot;&gt;差错检测&lt;/h3&gt;

&lt;p&gt;奇偶校验、CRC（循环冗余检测）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二维奇偶校验的定位&lt;/strong&gt;：横轴、纵轴各有一个出错→交叉定位→纠正；对于两个出错可以检测&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CRC&lt;/strong&gt;：传输d比特的数据D，考虑r比特的CRC比特R，$D*2^r{\oplus}R$ 记为&amp;lt;D, R&amp;gt;（形式上为D和R比特的组合）。提前选取r+1位的生成多项式G，然后发送方计算出R，满足&amp;lt;D, R&amp;gt; mod G = 0，发送&amp;lt;D, R&amp;gt;。接收方用G检验发送方数据。&lt;/p&gt;

&lt;p&gt;在CRC计算的加减法中使用模2运算（加法不进位减法不借位）。计算R时在D后补r个0，除以G，得到的余数为R&lt;/p&gt;

&lt;p&gt;$e.g. D=101110,r=3,G=1001,R=?$&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/07/28/9kc57afMuRXEwW3.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;局域网-lan&quot;&gt;局域网 LAN&lt;/h3&gt;

&lt;h4 id=&quot;拓扑结构&quot;&gt;拓扑结构&lt;/h4&gt;

&lt;p&gt;星形、环形（token ring：sender发送数据并最终吸收数据，吸收完后释放令牌）、树形…&lt;/p&gt;

&lt;p&gt;以太网的总线拓扑：使用同轴电缆总线互联节点（广播局域网）&lt;/p&gt;

&lt;h4 id=&quot;传输媒介&quot;&gt;传输媒介&lt;/h4&gt;

&lt;p&gt;网线、WiFi&lt;/p&gt;

&lt;h4 id=&quot;以太网-ethernet&quot;&gt;以太网 Ethernet&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;服务：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对网络层提供不可靠服务：若未通过CRC检测则直接丢弃，通过则啥也不做（不发送ACK,Non ACK)&lt;/p&gt;

&lt;p&gt;无连接服务（类似UDP，不握手）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以太网帧的格式&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;前导码&lt;/th&gt;
      &lt;th&gt;Dst Addr&lt;/th&gt;
      &lt;th&gt;Src Addr&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Data&lt;/th&gt;
      &lt;th&gt;CRC&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;标记帧的开始&lt;/td&gt;
      &lt;td&gt;目的地址&lt;/td&gt;
      &lt;td&gt;源地址&lt;/td&gt;
      &lt;td&gt;类型（如arp）&lt;/td&gt;
      &lt;td&gt;数据，即IP数据报&lt;/td&gt;
      &lt;td&gt;校验码&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8字节&lt;/td&gt;
      &lt;td&gt;6字节&lt;/td&gt;
      &lt;td&gt;6字节&lt;/td&gt;
      &lt;td&gt;2字节&lt;/td&gt;
      &lt;td&gt;46-1500字节，不足补全&lt;/td&gt;
      &lt;td&gt;4字节&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;地址称为MAC地址，固定值，AB-CD-EF-GH-IJ-LM，前3字节为厂商；可重复&lt;/p&gt;

&lt;p&gt;前导码前7个字节均为10101010，最后一个是10101011，为避免Data等中出现前导码，可以用一定规则插入字节，例如每遇到101010则插入0，这样只会在前导码中出现1010101&lt;/p&gt;

&lt;h4 id=&quot;网桥和交换机&quot;&gt;网桥和交换机&lt;/h4&gt;

&lt;p&gt;将多个以太网连接成更大的以太网的&lt;strong&gt;局域网组网设备&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;：路由转发和过滤（转发表+地址学习）、生成树算法&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;转发表&lt;/strong&gt;初始为空，收到A-&amp;gt;B，由端口a到达，则记录A对应端口a&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;生成树算法&lt;/strong&gt;：分布式算法&lt;/p&gt;

&lt;p&gt;*广播风暴问题：由于成环导致的，因此使用生成树避免成环&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;一定规则确定树根，如MAC地址最小值&lt;/li&gt;
  &lt;li&gt;每个节点向邻居发送Message(Y, d, X)，其中Y为自己目前认为的根，d为自己到根的距离，X为自己，初始时均发送M(X, 0, X)&lt;/li&gt;
  &lt;li&gt;当节点X收到M(Y, d, Z)，且Y更适合当根（按照1，即Y &amp;lt; X），则更新，X发送M(Y, d+1, X)给邻居&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/07/28/CNG9zcbseOMRhFQ.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对比：Hub, Bridge, Layer2 switch, Layer3 switch&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Hub&lt;/th&gt;
      &lt;th&gt;只提供物理转发&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Bridge&lt;/td&gt;
      &lt;td&gt;有转发表，可自学习&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layer2 switch&lt;/td&gt;
      &lt;td&gt;增加了交换功能，避免冲突（一个端口就是一个冲突域）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Layer3 switch&lt;/td&gt;
      &lt;td&gt;加入一些路由器功能&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;em&gt;*共享媒介（Hub、网桥）和交换机的区别：&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;能力区别，switch交换逻辑下速度更高且collision free（类似＃一样的连接）&lt;/li&gt;
  &lt;li&gt;端口数区别，网桥2-4个，交换机很多&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;媒介访问控制-mac&quot;&gt;媒介访问控制 MAC&lt;/h3&gt;

&lt;p&gt;三大方式：信道切分、轮流访问、随机访问&lt;/p&gt;

&lt;p&gt;媒介利用率U = 传输帧的时间/总时间=效率&lt;/p&gt;

&lt;p&gt;相对传播时间a=传播时间/传输时间=传播时间（传输时间被正则化为1）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;基础效率分析：&lt;/strong&gt;point-to-point方式，总时间为1（传输）+a（传播），传输帧的时间为1，则 $U=\frac{1}{1+a} $&lt;/p&gt;

&lt;h4 id=&quot;信道切分&quot;&gt;信道切分&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;时分多址 TDMA：每个时间帧分为固定个时隙，每个节点只能在每个帧中给定的时隙使用；在人少时效率低&lt;/li&gt;
  &lt;li&gt;频分多址 FDMA：每个节点占用R bps信道的一定频段，故仅有R/N带宽&lt;/li&gt;
  &lt;li&gt;码分多址 CDMA：每个需要发送的比特拥有1时隙，比特为1或-1；对每个发送方进行特殊编码，将其每个比特编码为M个比特序列，同时发送的发送方的比特序列将作异或，接收方按一定规则解码即可。例如，发送方的编码为1 1 1 -1 1 -1 -1 -1，则1即为上述编码，-1转为-1 -1 -1 1 -1 1 1 1&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;轮流访问&quot;&gt;轮流访问&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;轮询：选定主节点轮流告诉其余节点可传输帧的数量，鲁棒性低（主节点不可故障）、有轮询时延。e.g.蓝牙&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;令牌传递协议（令牌环）：拥有令牌的sender发送数据，指明receiver，然后数据在环上运输，某节点发现自己是receiver则接收数据；当sender再次收到该数据时，回收并释放令牌给下一节点&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;效率分析&lt;/strong&gt;：假设有N个站点，令牌环下的传播时间a即为绕一圈的时间，总时间为传输帧的时间+将令牌送往下一节点的时间（这时候视为发送完成）。设0时刻开始发送。&lt;/p&gt;

    &lt;p&gt;什么时候可以释放令牌：①已发送完毕，即要在1时刻之后；②已回收数据，即要在a时刻之后。&lt;/p&gt;

    &lt;p&gt;故对于大帧（a&amp;lt;1)，在1时刻开始释放令牌，对于小帧（a&amp;gt;1），在a时刻开始释放令牌，释放令牌需要的时间为a/N；&lt;/p&gt;

    &lt;p&gt;故大帧效率：$U=\frac{1}{1+\frac{a}{N}} $，小帧效率：$U=\frac{1}{a+\frac{a}{N}} $。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;随机访问&quot;&gt;随机访问&lt;/h4&gt;

&lt;h5 id=&quot;aloha&quot;&gt;ALOHA&lt;/h5&gt;

&lt;p&gt;立刻传输，若传输过程中发生碰撞，在传输完后立刻以p概率重传，否则等待一个帧的时间，再以p概率重传。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;效率分析&lt;/strong&gt;：设一个帧时间为1，某节点的某帧在t~0~时间开始传输（概率为p），则若成功，[t~0~-1, t~0~]以及[t~0~, t~0~+1]时间内均不能有其他帧的传输，概率为 $p(1-p)^{(N-1)}$，故总的成功概率为 $p(1-p)^{2(N-1)}$，效率为 $Np(1-p)^{2(N-1)}$。当N趋于无穷时，求极限得其最大效率为p = 1 / (2N - 1)时，效率 $U=\frac{1}{2e} $.&lt;/p&gt;

&lt;h5 id=&quot;时隙aloha&quot;&gt;时隙ALOHA&lt;/h5&gt;

&lt;p&gt;帧：L比特，一个时隙：L/R，在每个时隙的起点以ALOHA的方式发送（即若碰撞则等待一个时隙，再以p概率）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;效率分析&lt;/strong&gt;：t~0~时刻其他不发送即可，即 $Np(1-p)^{N-1}$。当p = 1/N时，最大效率 $U=\frac{1}{e} $.&lt;/p&gt;

&lt;h5 id=&quot;载波侦听多路访问-csma&quot;&gt;载波侦听多路访问 CSMA&lt;/h5&gt;

&lt;p&gt;先听信道是否繁忙，若不繁忙则传输，否则：&lt;/p&gt;

&lt;p&gt;非持续：等待随机一段时间&lt;/p&gt;

&lt;p&gt;1-持续：一直等待直到空闲，然后抢占&lt;/p&gt;

&lt;p&gt;p-持续：一直等待直到空闲，然后按p概率抢占，一般p=1/N&lt;/p&gt;

&lt;p&gt;CSMA/CD：&lt;strong&gt;以太网的方法&lt;/strong&gt;，引入碰撞检测，在传输过程中若发生碰撞则立即停止，然后发送jam信号（全1）提醒其他节点（用以保证其余所有节点都检测到该次冲突）。在这之后，使用二进制指数后退算法（BEB），即在碰撞n次后，从[0, 2^n^-1]大小的窗口中选择一个随机数K，等待K个时隙。在0-10次，窗口放大，11-16次，窗口不变，仍失败则丢包。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*时隙被定义为512bit在10Mbps或100Mbps网络的发送时间&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;CSMA与ALOHA相比，多了“听”的过程，即若繁忙会等待到不繁忙。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;效率分析&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;假设是p-持续的，而不是BEB算法&lt;/p&gt;

&lt;p&gt;某个节点在某个slot成功发送的概率为 $A=Np(1-p)^{N-1}$&lt;/p&gt;

&lt;p&gt;取极限，可得 $p=\frac{1}{N}$ 时， $A=(1-\frac{1}{N})^{N-1}$，当N趋于无穷时 $A=1/e$&lt;/p&gt;

&lt;p&gt;某个节点用j个slots发送出去的概率为 $A(1-A)^j$&lt;/p&gt;

&lt;p&gt;假设一个contention slot为2a（最坏情况下需要两倍传播时间检测到冲突），在每一个contention slot，所有节点都以概率p抢占信道，直到某个节点抢到并成功发送数据。&lt;/p&gt;

&lt;p&gt;平均情况下，需要 $\sum_{j}^{\infty}jA(1-A)^j$ 个slots（几何分布），该值为$B=\frac{1-A}{A}$。&lt;/p&gt;

&lt;p&gt;故&lt;/p&gt;

&lt;p&gt;$U=\frac{Frame\ time}{Frame\ time+Propagation\ time+Average\ contention time}$&lt;/p&gt;

&lt;p&gt;​	$=\frac{1}{1+a+2aB}$&lt;/p&gt;

&lt;p&gt;​	$=\frac{1}{1+\frac{2-A}Aa}\approx \frac{1}{1+4.44a}$&lt;/p&gt;

&lt;p&gt;对于实际的CSMA/CD，其近似值为：&lt;/p&gt;

&lt;h3 id=&quot;无线局域网-wlan&quot;&gt;无线局域网 WLAN&lt;/h3&gt;

&lt;h2 id=&quot;网络层&quot;&gt;网络层&lt;/h2&gt;

&lt;h2 id=&quot;传输层&quot;&gt;传输层&lt;/h2&gt;

&lt;h2 id=&quot;网络安全&quot;&gt;网络安全&lt;/h2&gt;

&lt;h2 id=&quot;多媒体和部分应用层&quot;&gt;多媒体和部分应用层&lt;/h2&gt;

&lt;p&gt;最后修改于 2020-7-29&lt;/p&gt;</content><author><name></name></author><category term="notes" /><category term="study" /><summary type="html">按复习顺序（目前的顺序是：绪论→链路层→网络层→传输层→网络安全→多媒体和部分应用层）整理计网复习知识点。🐛🐛🐛 绪论 什么是因特网 “网络的网络” 从多维度分析： 维度 解释 设备 端设备、通信链路、路由器 服务 分布式应用程序&amp;amp;套接字接口 协议 TCP/IP… 连接到因特网，然后传输 端系统-边缘路由器-核心路由器-边缘路由器-端系统 类型 举例 网络边缘 端系统（主机）：client, server, data center… 网络接入 电缆、光纤、卫星… 网络核心 分组交换机&amp;amp;路由器构成的网络 传输方式：电路交换（独占，e.g.专用电话线）；分组交换（分块传输，核心路由器负责调度）；虚电路（分组交换方式实现电路交换，固定的路由为其预留带宽） 协议体系结构 分层的 OSI:物理、数据链路、网络、传输、会话、表示、应用，后三层在TCP/IP中均在应用层实现 网络性能评估 时延类型 产生方式 传输时延 将分组发送出去所需要的时间，Length / Rate 传播时延 分组在网络中传播所需要的时间，RTT = 2 * propagation delay 排队时延 分组在缓冲区等待 处理时延 检错、查看首部并导向正确位置 顺序：4-3-1-2 丢包原因：缓冲区不足 or 传播中出错 吞吐量：可用带宽，路径上获得的带宽的最小值 链路层 核心功能 分帧（frame = 头+datagram+尾）、MAC（媒介访问控制，在共享广播信道时协调节点） 差错检测 奇偶校验、CRC（循环冗余检测） 二维奇偶校验的定位：横轴、纵轴各有一个出错→交叉定位→纠正；对于两个出错可以检测 CRC：传输d比特的数据D，考虑r比特的CRC比特R，$D*2^r{\oplus}R$ 记为&amp;lt;D, R&amp;gt;（形式上为D和R比特的组合）。提前选取r+1位的生成多项式G，然后发送方计算出R，满足&amp;lt;D, R&amp;gt; mod G = 0，发送&amp;lt;D, R&amp;gt;。接收方用G检验发送方数据。 在CRC计算的加减法中使用模2运算（加法不进位减法不借位）。计算R时在D后补r个0，除以G，得到的余数为R $e.g. D=101110,r=3,G=1001,R=?$ 局域网 LAN 拓扑结构 星形、环形（token ring：sender发送数据并最终吸收数据，吸收完后释放令牌）、树形… 以太网的总线拓扑：使用同轴电缆总线互联节点（广播局域网） 传输媒介 网线、WiFi 以太网 Ethernet 服务： 对网络层提供不可靠服务：若未通过CRC检测则直接丢弃，通过则啥也不做（不发送ACK,Non ACK) 无连接服务（类似UDP，不握手） 以太网帧的格式 前导码 Dst Addr Src Addr Type Data CRC 标记帧的开始 目的地址 源地址 类型（如arp） 数据，即IP数据报 校验码 8字节 6字节 6字节 2字节 46-1500字节，不足补全 4字节 地址称为MAC地址，固定值，AB-CD-EF-GH-IJ-LM，前3字节为厂商；可重复 前导码前7个字节均为10101010，最后一个是10101011，为避免Data等中出现前导码，可以用一定规则插入字节，例如每遇到101010则插入0，这样只会在前导码中出现1010101 网桥和交换机 将多个以太网连接成更大的以太网的局域网组网设备 功能：路由转发和过滤（转发表+地址学习）、生成树算法 转发表初始为空，收到A-&amp;gt;B，由端口a到达，则记录A对应端口a 生成树算法：分布式算法 *广播风暴问题：由于成环导致的，因此使用生成树避免成环 一定规则确定树根，如MAC地址最小值 每个节点向邻居发送Message(Y, d, X)，其中Y为自己目前认为的根，d为自己到根的距离，X为自己，初始时均发送M(X, 0, X) 当节点X收到M(Y, d, Z)，且Y更适合当根（按照1，即Y &amp;lt; X），则更新，X发送M(Y, d+1, X)给邻居 对比：Hub, Bridge, Layer2 switch, Layer3 switch Hub 只提供物理转发 Bridge 有转发表，可自学习 Layer2 switch 增加了交换功能，避免冲突（一个端口就是一个冲突域） Layer3 switch 加入一些路由器功能 *共享媒介（Hub、网桥）和交换机的区别： 能力区别，switch交换逻辑下速度更高且collision free（类似＃一样的连接） 端口数区别，网桥2-4个，交换机很多 媒介访问控制 MAC 三大方式：信道切分、轮流访问、随机访问 媒介利用率U = 传输帧的时间/总时间=效率 相对传播时间a=传播时间/传输时间=传播时间（传输时间被正则化为1） 基础效率分析：point-to-point方式，总时间为1（传输）+a（传播），传输帧的时间为1，则 $U=\frac{1}{1+a} $ 信道切分 时分多址 TDMA：每个时间帧分为固定个时隙，每个节点只能在每个帧中给定的时隙使用；在人少时效率低 频分多址 FDMA：每个节点占用R bps信道的一定频段，故仅有R/N带宽 码分多址 CDMA：每个需要发送的比特拥有1时隙，比特为1或-1；对每个发送方进行特殊编码，将其每个比特编码为M个比特序列，同时发送的发送方的比特序列将作异或，接收方按一定规则解码即可。例如，发送方的编码为1 1 1 -1 1 -1 -1 -1，则1即为上述编码，-1转为-1 -1 -1 1 -1 1 1 1 轮流访问 轮询：选定主节点轮流告诉其余节点可传输帧的数量，鲁棒性低（主节点不可故障）、有轮询时延。e.g.蓝牙 令牌传递协议（令牌环）：拥有令牌的sender发送数据，指明receiver，然后数据在环上运输，某节点发现自己是receiver则接收数据；当sender再次收到该数据时，回收并释放令牌给下一节点 效率分析：假设有N个站点，令牌环下的传播时间a即为绕一圈的时间，总时间为传输帧的时间+将令牌送往下一节点的时间（这时候视为发送完成）。设0时刻开始发送。 什么时候可以释放令牌：①已发送完毕，即要在1时刻之后；②已回收数据，即要在a时刻之后。 故对于大帧（a&amp;lt;1)，在1时刻开始释放令牌，对于小帧（a&amp;gt;1），在a时刻开始释放令牌，释放令牌需要的时间为a/N； 故大帧效率：$U=\frac{1}{1+\frac{a}{N}} $，小帧效率：$U=\frac{1}{a+\frac{a}{N}} $。 随机访问 ALOHA 立刻传输，若传输过程中发生碰撞，在传输完后立刻以p概率重传，否则等待一个帧的时间，再以p概率重传。 效率分析：设一个帧时间为1，某节点的某帧在t~0~时间开始传输（概率为p），则若成功，[t~0~-1, t~0~]以及[t~0~, t~0~+1]时间内均不能有其他帧的传输，概率为 $p(1-p)^{(N-1)}$，故总的成功概率为 $p(1-p)^{2(N-1)}$，效率为 $Np(1-p)^{2(N-1)}$。当N趋于无穷时，求极限得其最大效率为p = 1 / (2N - 1)时，效率 $U=\frac{1}{2e} $. 时隙ALOHA 帧：L比特，一个时隙：L/R，在每个时隙的起点以ALOHA的方式发送（即若碰撞则等待一个时隙，再以p概率） 效率分析：t~0~时刻其他不发送即可，即 $Np(1-p)^{N-1}$。当p = 1/N时，最大效率 $U=\frac{1}{e} $. 载波侦听多路访问 CSMA 先听信道是否繁忙，若不繁忙则传输，否则： 非持续：等待随机一段时间 1-持续：一直等待直到空闲，然后抢占 p-持续：一直等待直到空闲，然后按p概率抢占，一般p=1/N CSMA/CD：以太网的方法，引入碰撞检测，在传输过程中若发生碰撞则立即停止，然后发送jam信号（全1）提醒其他节点（用以保证其余所有节点都检测到该次冲突）。在这之后，使用二进制指数后退算法（BEB），即在碰撞n次后，从[0, 2^n^-1]大小的窗口中选择一个随机数K，等待K个时隙。在0-10次，窗口放大，11-16次，窗口不变，仍失败则丢包。 *时隙被定义为512bit在10Mbps或100Mbps网络的发送时间 CSMA与ALOHA相比，多了“听”的过程，即若繁忙会等待到不繁忙。 效率分析： 假设是p-持续的，而不是BEB算法 某个节点在某个slot成功发送的概率为 $A=Np(1-p)^{N-1}$ 取极限，可得 $p=\frac{1}{N}$ 时， $A=(1-\frac{1}{N})^{N-1}$，当N趋于无穷时 $A=1/e$ 某个节点用j个slots发送出去的概率为 $A(1-A)^j$ 假设一个contention slot为2a（最坏情况下需要两倍传播时间检测到冲突），在每一个contention slot，所有节点都以概率p抢占信道，直到某个节点抢到并成功发送数据。 平均情况下，需要 $\sum_{j}^{\infty}jA(1-A)^j$ 个slots（几何分布），该值为$B=\frac{1-A}{A}$。 故 $U=\frac{Frame\ time}{Frame\ time+Propagation\ time+Average\ contention time}$ ​ $=\frac{1}{1+a+2aB}$ ​ $=\frac{1}{1+\frac{2-A}Aa}\approx \frac{1}{1+4.44a}$ 对于实际的CSMA/CD，其近似值为： 无线局域网 WLAN 网络层 传输层 网络安全 多媒体和部分应用层 最后修改于 2020-7-29</summary></entry><entry><title type="html">从零开始的搭建个人博客生活</title><link href="http://localhost:4000/howtobuild/" rel="alternate" type="text/html" title="从零开始的搭建个人博客生活" /><published>2020-06-18T00:00:00+08:00</published><updated>2020-06-18T00:00:00+08:00</updated><id>http://localhost:4000/howtobuild</id><content type="html" xml:base="http://localhost:4000/howtobuild/">&lt;p&gt;在这里记录和分享我的搭建经验，&lt;del&gt;应该不会&lt;/del&gt;持续更新&lt;/p&gt;

&lt;h1 id=&quot;开始&quot;&gt;开始&lt;/h1&gt;

&lt;p&gt;想建自己的网站这个想法已经在我脑海里存留很久了，然而受限于服务器和域名的价格（&lt;del&gt;贫穷&lt;/del&gt;）一直没有实现。偶然了解到&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;的存在之后，打算着手开始建立个人博客，可能会在这里发一些乱七八糟的东西。&lt;/p&gt;

&lt;h1 id=&quot;搭建并完善&quot;&gt;搭建并完善&lt;/h1&gt;

&lt;h2 id=&quot;基于github-pages搭建个人博客&quot;&gt;基于GitHub Pages搭建个人博客&lt;/h2&gt;

&lt;p&gt;关于基础的建立，可以参考&lt;a href=&quot;https://fromendworld.github.io/LOFFER/document/&quot;&gt;LOFFER使用基础教程&lt;/a&gt;，本站使用的模板完全基于LOFFER。教程中包括评论区的建立等内容都非常完善且易懂，即使没有提到的东西在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config,yml&lt;/code&gt; 和作者仓库的&lt;a href=&quot;https://github.com/FromEndWorld/LOFFER/blob/master/README.md&quot;&gt;README&lt;/a&gt;中也有非常详尽的注释。本文仅会分享一些我个人对原始模板的个性化。如果你想要直接使用我的一些个性化设置，也欢迎Fork&lt;a href=&quot;https://github.com/MXtremist/mxtremist.github.io&quot;&gt;我的仓库&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;按照作者的步骤，很容易就能顺利搭建好个人博客。注意在为仓库（Repository）命名时，建议命名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name.github.io &lt;/code&gt;，例如我的仓库就命名为 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mxtremist.github.io&lt;/code&gt; ，这样我的博客首页就会是&lt;a href=&quot;https://mxtremist.github.io/&quot;&gt;mxtremist.github.io&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;属于自己的logo&quot;&gt;属于自己的LOGO&lt;/h2&gt;

&lt;p&gt;大触可以直接跳过，自己画一个就OK了。&lt;/p&gt;

&lt;p&gt;关于logo的制作，这里推荐一个我认为比较好用的网站：&lt;a href=&quot;https://www.designevo.com/cn/&quot;&gt;DesignEvo&lt;/a&gt; ，使用免费且有较多个性化选择，唯一的问题是不支持背景透明（也可能是我没看到），如果使用不规则的图形，比如我这样的，可能需要背景透明才会更好看，这里推荐一个Windows下好用的icon编辑软件&lt;a href=&quot;https://icofx.ro/downloads.html&quot;&gt;icoFX&lt;/a&gt;，这个软件是我当初在个性化Windows 10的时候发现的，改天我可能会写一个关于美化Win10的文章。&lt;/p&gt;

&lt;p&gt;编辑好自己的logo和favicon（用于显示在浏览器角标）之后，需要上传到图床，这里推荐&lt;a href=&quot;https://sm.ms/&quot;&gt;SM.MS&lt;/a&gt;，这也是老牌图床了，在国内好用且免费。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/06/18/lDKINy6tHE23aMO.png&quot; alt=&quot;ImageURL&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上传好后点击Image URL，将图片链接粘贴到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; 中对应位置即可。注意对于任何的改动，可能都需要几分钟才能在自己的主页刷新，所以如果有需求可以考虑增加本地博客预览功能，具体实现请问搜索引擎。&lt;/p&gt;

&lt;p&gt;ps：如果是Windows端浏览器，建议使用Ctrl+R强制刷新。&lt;/p&gt;

&lt;h2 id=&quot;只支持微博还有一大堆不存在的社交链接&quot;&gt;只支持微博，还有一大堆不存在的社交链接？&lt;/h2&gt;

&lt;p&gt;原生模板中的社交链接仅有微博、GitHub和那些不存在的网站，那么如何进行自定义呢？&lt;/p&gt;

&lt;p&gt;根目录下 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/include/svg-icons&lt;/code&gt; 对应各个链接及其SVG矢量图标，以bilibili为例，只需要它的个人主页格式为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://space.bilibili.com/169345992&lt;/code&gt;，我们用CV大法新添几行代码，再把其中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;path d=&amp;gt;&lt;/code&gt; 修改为自己想要的SVG图片的相关内容即可。图标的大小最好为48x48 px。现在的问题是如何得到SVG图标，&lt;a href=&quot;https://github.com/FortAwesome/Font-Awesome/tree/master/svgs/brands&quot;&gt;这里&lt;/a&gt;可以找到大部分品牌的SVG素材，然而如果没有那你想要的呢？&lt;/p&gt;

&lt;p&gt;首先问问搜索引擎，我在网上找到了很多在线将图片转为SVG格式的网站，但是绝大多数都是“假的”SVG，即采用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;image&amp;gt;&lt;/code&gt;标签加上一个base64图片，而我们需要的是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;svg&amp;gt; + &amp;lt;path d=&amp;gt;&lt;/code&gt;这样用path画出路线实现矢量缩放。最终，我找到了一个很方便的&lt;a href=&quot;https://www.vectorizer.io/&quot;&gt;网站&lt;/a&gt;。自己选好图标，上传，得到SVG相关参数，CV大法，搞定！搞定图标之后，还需要配置 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config,yml&lt;/code&gt; 文件。以bilibili为例，在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foot-links&lt;/code&gt;中添加：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;footer-links&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;weibo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;xxxxxx&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;请输入你的微博个性域名&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;bilibili&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;xxxxxx&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;这里填主站空间后面的数字&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最终结果如下图，奇怪的硬币增加了！&lt;/p&gt;

&lt;p&gt;·&lt;img src=&quot;https://i.loli.net/2020/06/19/zweYi6o5yhadATJ.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;添加搜索功能&quot;&gt;添加搜索功能&lt;/h2&gt;

&lt;p&gt;如果有一天，我的博客写了成千上万篇，那么我该如何快速找到我想要的博客呢？归档和标签是一个好方法，但是如果同一个tag内依然有大量文章，或者不记得是哪一年的了呢？这时候就需要一个简单的搜索功能。&lt;/p&gt;

&lt;p&gt;搜索功能由&lt;a href=&quot;https://github.com/christian-fei/Simple-Jekyll-Search&quot;&gt;Simple-Jekyll-Search&lt;/a&gt;提供技术支持。点击右上角donwload，解压后将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/example/js&lt;/code&gt;文件夹和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/example/search.json&lt;/code&gt;文件上传到我们自己的仓库根目录下即可。&lt;/p&gt;

&lt;p&gt;接下来需要在想要显示的页面配置搜索框，例如想要在主页，那么就打开&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt;，粘贴以下两端代码：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;配置搜索框样式&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;search-container&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;search-input&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;search...&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;
    width: 100%;
    height: 34px;
    color: #15aabf;
    background-color: rgba(180,242,245,.2);
    line-height: 32px;
    padding: 0px 16px;
    margin: 10px 0px;
    border: 1px solid #15aabf;
    border-radius: 17px;
    font-size: 16px;
    font-weight: bold;
    outline: none;
    box-sizing: border-box;
    box-shadow: inset 0 1px 1px rgba(0,0,0,.1), 0 0 12px rgba(21,170,191,.7);
    &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;results-container&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;配置搜索功能&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;/js/simple-jekyll-search.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.simpleJekyllSearch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;SimpleJekyllSearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;py&quot;&gt;searchInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'search-input'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;resultsContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'results-container'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'/search.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;searchResultTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'&amp;lt;li&amp;gt;&amp;lt;a href=&quot;{url}?query={query}&quot; title=&quot;{desc}&quot;&amp;gt;{title}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fuzzy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Welcome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中第一部分为配置搜索框样式，如果想要自定义，可以参考&lt;a href=&quot;https://www.cnblogs.com/laihuayan/archive/2012/07/27/2611111.html&quot;&gt;CSS样式大全&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;搜索框最终实现效果如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/06/19/a6YgRhGi7rEt3pV.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;那么有没有人看我的博客呢&quot;&gt;那么有没有人看我的博客呢？&lt;/h2&gt;

&lt;p&gt;浏览量是衡量一个网站/一篇文章很重要的数据，那么有没有什么方便的工具呢？俗话说得好，&lt;em&gt;你不用 Google，你有 Bing…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;通过搜索发现，&lt;a href=&quot;http://busuanzi.ibruce.info/&quot;&gt;这里&lt;/a&gt;有一个非常简单好用的工具，有了它，我们就可以很方便地在想要的位置添加想要显示的数据。例如，在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt;的末尾添加：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;busuanzi_container_site_pv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;font-family:Consolas;color:rgba(21,170,191,.6);font-size:12px;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;Page&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;busuanzi_value_site_pv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;font-family:Consolas;color:Silver;font-size:12px;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;busuanzi_container_site_uv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;font-family:Consolas;color:rgba(21,170,191,.6);font-size:12px;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;Vistor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;busuanzi_value_site_uv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;font-family:Consolas;color:Silver;font-size:12px;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;就可以显示主站的访问量（PV）和访问人数（UV），而在_layouts/post.html的末尾添加：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;busuanzi_container_page_pv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;font-family:Consolas;color:rgba(21,170,191,.6);font-size:12px;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;err&quot;&gt;本文阅读量&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;busuanzi_value_page_pv&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;font-family:Consolas;color:Silver;font-size:12px;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;就可以查看这篇文章的阅读量。这里是显示效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/06/19/BJFc54oXneyUKhx.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;显然，没什么人看我的博客XD。&lt;/p&gt;

&lt;p&gt;除此之外还有配置Google Analytics的傻瓜式操作，这里不再赘述了。&lt;/p&gt;

&lt;h2 id=&quot;音乐播放器来&quot;&gt;音乐播放器来!&lt;/h2&gt;

&lt;p&gt;如果你想要为自己的网站添加音乐播放器，那么慎用浏览器搜索教程！因为网上的教程绝大多数基于网易云音乐生成的外链播放器，然而，出于未知原因，在2019年前后，网易云音乐大规模地停止了对外链播放器的支持，&lt;del&gt;网易云biss！&lt;/del&gt;，那么我们还有其他的方法么？&lt;/p&gt;

&lt;p&gt;经过我一个下午的寻找，终于找到了METO大佬的&lt;a href=&quot;https://github.com/metowolf/MetingJS&quot;&gt;MetingJS&lt;/a&gt;项目，该项目为我们提供了一个使用起来极其方便的音乐播放器插件。想要使用这个插件，首先我们在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/&lt;/code&gt;下创建文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cloud-music.html&lt;/code&gt;，填写下列代码：&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- require APlayer --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- require MetingJS --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;meting-js&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;server=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;netease&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;song&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1354634080&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;autoplay=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;theme=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#0b7285&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/meting-js&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关于meting-js内各个参数的意义，参考&lt;a href=&quot;https://github.com/metowolf/MetingJS/blob/master/README.md&quot;&gt;MetingJS官方手册&lt;/a&gt;以及&lt;a href=&quot;https://aplayer.js.org/#/zh-Hans/&quot;&gt;Aplayer官方手册&lt;/a&gt;。注意到我们还有&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;两项没有使用了参数，这个会在后面解释。&lt;/p&gt;

&lt;p&gt;接下来，找到你需要添加音乐播放器的位置。例如，我想要在每篇文章的正文开头添加，就打开&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts/post.html&lt;/code&gt;，找到正文开头位置：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;entry&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;这里是正文开头&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;插入如下代码：(在每行前添加{和% )&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.music-id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;clude&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cloud-music&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样，我们的音乐播放器就实现好了，现在需要为其指定播放的歌曲。&lt;/p&gt;

&lt;p&gt;在文章的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;markdown&lt;/code&gt;文件开头layout内添加变量music-type和music-id，前者可以为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;song&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;playlist&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;album&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;search&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;artist&lt;/code&gt;，指明播放类型，后者为id代码。以网易云音乐为例，如果我想要播放&lt;a href=&quot;https://music.163.com/#/song?id=1354634080&quot;&gt;Bloom&lt;/a&gt;这首歌，网址：https://music.163.com/#/song?id=1354634080，就添加：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;music&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;song&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;music&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1354634080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而如果我想要播放歌单，把music-type改为”playlist”，id改为歌单id即可。歌单id需要在网页版打开歌单查看网址。音乐播放器的效果如下图所示，可以说是非常的鹅妹子嘤啊：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/06/19/eBV54iMRmIYFE3c.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他自定义&quot;&gt;其他自定义&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;修改属性&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;文件位置&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;主题颜色&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;_sass/_variables.scss&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;主页&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;index.html&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;文章页&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;_layouts/post.html&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;sidebar&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;_includes/nav.html&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;使用lateX：找到对应页，在MathJax位置插入如下代码：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;本地：在根目录下执行命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll server&lt;/code&gt;，然后访问&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://127.0.0.1:4000/&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;更新日志&quot;&gt;更新日志&lt;/h1&gt;

&lt;h2 id=&quot;2020-6-16&quot;&gt;2020-6-16&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;添加：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;个人博客正式上线&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;支持基于Disqus的评论&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2020-6-17&quot;&gt;2020-6-17&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;添加：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;现在支持bilibili链接了&lt;/li&gt;
    &lt;li&gt;增加了搜索（仅支持搜索posts内文件名和tag）&lt;/li&gt;
    &lt;li&gt;增加了访问人数统计&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;修改：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;替换了新的logo和favicon，自我感觉更好看了&lt;/li&gt;
    &lt;li&gt;将评论区由Disqus替换为Gittalk，然而依然被墙&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2020-6-18&quot;&gt;2020-6-18&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;修改：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;调整了搜索框的样式&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2020-6-19&quot;&gt;2020-6-19&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;添加：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;添加了音乐播放器&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;修改：&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;修改了主题颜色&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;致谢&quot;&gt;致谢&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll&lt;/a&gt; - 这是本站存在的根基&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/FromEndWorld/LOFFER&quot;&gt;LOFFER&lt;/a&gt; - 提供了基础框架及教程&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.designevo.com/cn/&quot;&gt;DesignEvo&lt;/a&gt; - 在线制作免费好康的logo&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vectorizer.io/&quot;&gt;vectorizer&lt;/a&gt; - 常见图片格式转换为真·SVG&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sm.ms/&quot;&gt;SM.MS&lt;/a&gt; - 免费好用没被墙的图床&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/christian-fei/Simple-Jekyll-Search&quot;&gt;Simple-Jekyll-Search&lt;/a&gt; - 搜索功能支持&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://busuanzi.ibruce.info/&quot;&gt;不蒜子&lt;/a&gt; - 访问计数功能支持&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="notes" /><summary type="html">在这里记录和分享我的搭建经验，应该不会持续更新 开始 想建自己的网站这个想法已经在我脑海里存留很久了，然而受限于服务器和域名的价格（贫穷）一直没有实现。偶然了解到GitHub Pages的存在之后，打算着手开始建立个人博客，可能会在这里发一些乱七八糟的东西。 搭建并完善 基于GitHub Pages搭建个人博客 关于基础的建立，可以参考LOFFER使用基础教程，本站使用的模板完全基于LOFFER。教程中包括评论区的建立等内容都非常完善且易懂，即使没有提到的东西在 _config,yml 和作者仓库的README中也有非常详尽的注释。本文仅会分享一些我个人对原始模板的个性化。如果你想要直接使用我的一些个性化设置，也欢迎Fork我的仓库。 按照作者的步骤，很容易就能顺利搭建好个人博客。注意在为仓库（Repository）命名时，建议命名为 name.github.io ，例如我的仓库就命名为 mxtremist.github.io ，这样我的博客首页就会是mxtremist.github.io。 属于自己的LOGO 大触可以直接跳过，自己画一个就OK了。 关于logo的制作，这里推荐一个我认为比较好用的网站：DesignEvo ，使用免费且有较多个性化选择，唯一的问题是不支持背景透明（也可能是我没看到），如果使用不规则的图形，比如我这样的，可能需要背景透明才会更好看，这里推荐一个Windows下好用的icon编辑软件icoFX，这个软件是我当初在个性化Windows 10的时候发现的，改天我可能会写一个关于美化Win10的文章。 编辑好自己的logo和favicon（用于显示在浏览器角标）之后，需要上传到图床，这里推荐SM.MS，这也是老牌图床了，在国内好用且免费。 上传好后点击Image URL，将图片链接粘贴到 _config.yml 中对应位置即可。注意对于任何的改动，可能都需要几分钟才能在自己的主页刷新，所以如果有需求可以考虑增加本地博客预览功能，具体实现请问搜索引擎。 ps：如果是Windows端浏览器，建议使用Ctrl+R强制刷新。 只支持微博，还有一大堆不存在的社交链接？ 原生模板中的社交链接仅有微博、GitHub和那些不存在的网站，那么如何进行自定义呢？ 根目录下 /include/svg-icons 对应各个链接及其SVG矢量图标，以bilibili为例，只需要它的个人主页格式为https://space.bilibili.com/169345992，我们用CV大法新添几行代码，再把其中的&amp;lt;path d=&amp;gt; 修改为自己想要的SVG图片的相关内容即可。图标的大小最好为48x48 px。现在的问题是如何得到SVG图标，这里可以找到大部分品牌的SVG素材，然而如果没有那你想要的呢？ 首先问问搜索引擎，我在网上找到了很多在线将图片转为SVG格式的网站，但是绝大多数都是“假的”SVG，即采用&amp;lt;image&amp;gt;标签加上一个base64图片，而我们需要的是&amp;lt;svg&amp;gt; + &amp;lt;path d=&amp;gt;这样用path画出路线实现矢量缩放。最终，我找到了一个很方便的网站。自己选好图标，上传，得到SVG相关参数，CV大法，搞定！搞定图标之后，还需要配置 _config,yml 文件。以bilibili为例，在foot-links中添加： footer-links: weibo: xxxxxx # 请输入你的微博个性域名 bilibili: xxxxxx # 这里填主站空间后面的数字 最终结果如下图，奇怪的硬币增加了！ · 添加搜索功能 如果有一天，我的博客写了成千上万篇，那么我该如何快速找到我想要的博客呢？归档和标签是一个好方法，但是如果同一个tag内依然有大量文章，或者不记得是哪一年的了呢？这时候就需要一个简单的搜索功能。 搜索功能由Simple-Jekyll-Search提供技术支持。点击右上角donwload，解压后将/example/js文件夹和/example/search.json文件上传到我们自己的仓库根目录下即可。 接下来需要在想要显示的页面配置搜索框，例如想要在主页，那么就打开index.html，粘贴以下两端代码： &amp;lt;!--配置搜索框样式--&amp;gt; &amp;lt;div class=&quot;search-container&quot;&amp;gt; &amp;lt;input type=&quot;text&quot; id=&quot;search-input&quot; placeholder=&quot;search...&quot; style=&quot; width: 100%; height: 34px; color: #15aabf; background-color: rgba(180,242,245,.2); line-height: 32px; padding: 0px 16px; margin: 10px 0px; border: 1px solid #15aabf; border-radius: 17px; font-size: 16px; font-weight: bold; outline: none; box-sizing: border-box; box-shadow: inset 0 1px 1px rgba(0,0,0,.1), 0 0 12px rgba(21,170,191,.7); &quot;&amp;gt; &amp;lt;ul id=&quot;results-container&quot;&amp;gt;&amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;!--配置搜索功能--&amp;gt; &amp;lt;script src=&quot;/js/simple-jekyll-search.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; window.simpleJekyllSearch = new SimpleJekyllSearch({ searchInput: document.getElementById('search-input'), resultsContainer: document.getElementById('results-container'), json: '/search.json', searchResultTemplate: '&amp;lt;li&amp;gt;&amp;lt;a href=&quot;{url}?query={query}&quot; title=&quot;{desc}&quot;&amp;gt;{title}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;', limit: 5, fuzzy: false, exclude: ['Welcome'] }) &amp;lt;/script&amp;gt; 其中第一部分为配置搜索框样式，如果想要自定义，可以参考CSS样式大全。 搜索框最终实现效果如下图： 那么有没有人看我的博客呢？ 浏览量是衡量一个网站/一篇文章很重要的数据，那么有没有什么方便的工具呢？俗话说得好，你不用 Google，你有 Bing… 通过搜索发现，这里有一个非常简单好用的工具，有了它，我们就可以很方便地在想要的位置添加想要显示的数据。例如，在index.html的末尾添加： &amp;lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;div align=&quot;center&quot;&amp;gt; &amp;lt;span id=&quot;busuanzi_container_site_pv&quot; style=&quot;font-family:Consolas;color:rgba(21,170,191,.6);font-size:12px;&quot;&amp;gt; Page View:&amp;lt;span id=&quot;busuanzi_value_site_pv&quot; style=&quot;font-family:Consolas;color:Silver;font-size:12px;&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;span id=&quot;busuanzi_container_site_uv&quot; style=&quot;font-family:Consolas;color:rgba(21,170,191,.6);font-size:12px;&quot;&amp;gt; Vistor:&amp;lt;span id=&quot;busuanzi_value_site_uv&quot; style=&quot;font-family:Consolas;color:Silver;font-size:12px;&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; 就可以显示主站的访问量（PV）和访问人数（UV），而在_layouts/post.html的末尾添加： &amp;lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;div align=&quot;center&quot;&amp;gt; &amp;lt;span id=&quot;busuanzi_container_page_pv&quot; style=&quot;font-family:Consolas;color:rgba(21,170,191,.6);font-size:12px;&quot;&amp;gt; 本文阅读量:&amp;lt;span id=&quot;busuanzi_value_page_pv&quot; style=&quot;font-family:Consolas;color:Silver;font-size:12px;&quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt; 就可以查看这篇文章的阅读量。这里是显示效果： 显然，没什么人看我的博客XD。 除此之外还有配置Google Analytics的傻瓜式操作，这里不再赘述了。 音乐播放器来! 如果你想要为自己的网站添加音乐播放器，那么慎用浏览器搜索教程！因为网上的教程绝大多数基于网易云音乐生成的外链播放器，然而，出于未知原因，在2019年前后，网易云音乐大规模地停止了对外链播放器的支持，网易云biss！，那么我们还有其他的方法么？ 经过我一个下午的寻找，终于找到了METO大佬的MetingJS项目，该项目为我们提供了一个使用起来极其方便的音乐播放器插件。想要使用这个插件，首先我们在_includes/下创建文件cloud-music.html，填写下列代码： &amp;lt;!-- require APlayer --&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&quot;&amp;gt; &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;!-- require MetingJS --&amp;gt; &amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;meting-js server=&quot;netease&quot; type=song id=1354634080 autoplay=true theme=#0b7285 &amp;gt; &amp;lt;/meting-js&amp;gt; 关于meting-js内各个参数的意义，参考MetingJS官方手册以及Aplayer官方手册。注意到我们还有type和id两项没有使用了参数，这个会在后面解释。 接下来，找到你需要添加音乐播放器的位置。例如，我想要在每篇文章的正文开头添加，就打开_layouts/post.html，找到正文开头位置： &amp;lt;div class=&quot;entry&quot;&amp;gt; &amp;lt;!-- 这里是正文开头 --&amp;gt; 插入如下代码：(在每行前添加{和% ) if page.music-id %} in clude cloud-music.html %} endif %} 这样，我们的音乐播放器就实现好了，现在需要为其指定播放的歌曲。 在文章的markdown文件开头layout内添加变量music-type和music-id，前者可以为song, playlist, album, search, artist，指明播放类型，后者为id代码。以网易云音乐为例，如果我想要播放Bloom这首歌，网址：https://music.163.com/#/song?id=1354634080，就添加： music-type: &quot;song&quot; music-id: 1354634080 而如果我想要播放歌单，把music-type改为”playlist”，id改为歌单id即可。歌单id需要在网页版打开歌单查看网址。音乐播放器的效果如下图所示，可以说是非常的鹅妹子嘤啊： 其他自定义 修改属性 文件位置 主题颜色 _sass/_variables.scss 主页 index.html 文章页 _layouts/post.html sidebar _includes/nav.html 使用lateX：找到对应页，在MathJax位置插入如下代码： &amp;lt;script src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot; type=&quot;text/javascript&quot;&amp;gt;&amp;lt;/script&amp;gt; 本地：在根目录下执行命令jekyll server，然后访问http://127.0.0.1:4000/. 更新日志 2020-6-16 添加： 个人博客正式上线 支持基于Disqus的评论 2020-6-17 添加： 现在支持bilibili链接了 增加了搜索（仅支持搜索posts内文件名和tag） 增加了访问人数统计 修改： 替换了新的logo和favicon，自我感觉更好看了 将评论区由Disqus替换为Gittalk，然而依然被墙 2020-6-18 修改： 调整了搜索框的样式 2020-6-19 添加： 添加了音乐播放器 修改： 修改了主题颜色 致谢 Jekyll - 这是本站存在的根基 LOFFER - 提供了基础框架及教程 DesignEvo - 在线制作免费好康的logo vectorizer - 常见图片格式转换为真·SVG SM.MS - 免费好用没被墙的图床 Simple-Jekyll-Search - 搜索功能支持 不蒜子 - 访问计数功能支持</summary></entry><entry><title type="html">第一篇文档</title><link href="http://localhost:4000/firstdoc/" rel="alternate" type="text/html" title="第一篇文档" /><published>2020-06-16T00:00:00+08:00</published><updated>2020-06-16T00:00:00+08:00</updated><id>http://localhost:4000/firstdoc</id><content type="html" xml:base="http://localhost:4000/firstdoc/">&lt;p&gt;上传于2020/6/16，仅供测试用&lt;/p&gt;</content><author><name></name></author><category term="sample" /><category term="document" /><summary type="html">上传于2020/6/16，仅供测试用</summary></entry></feed>